# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI/CD and release

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    name: ⚙️ Build application

    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code base
        uses: actions/checkout@v3

      - name: 🌐 Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: 🗂 Cache "node_modules"
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: "**/node_modules"
          key: ${{ runner.arch }}-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.arch }}-${{ runner.os }}-yarn-

      - name: ⬇️ Install dependencies
        if: steps.yarn-cache.outputs.cache-hit == 'false'
        run: yarn install --frozen-lockfile

      - name: ⚙️ Build application
        run: yarn run build

      - if: steps.yarn-cache.outputs.cache-hit == 'false'
        name: 🗃 List the state of node modules
        continue-on-error: true
        run: yarn list

  release:
    name: 🔖 Release application

    runs-on: ubuntu-latest

    needs: build

    steps:
      - name: 📥 Checkout code base
        uses: actions/checkout@v3

      - name: 🌐 Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: 🗂 Cache "node_modules"
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: "**/node_modules"
          key: ${{ runner.arch }}-${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.arch }}-${{ runner.os }}-yarn-

      - name: 🔖 Release application
        run: npx semantic-release
        env:
          # used by semantic-release to use the "@semantic-release/github" plugin
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
